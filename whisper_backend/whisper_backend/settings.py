"""
Django settings for whisper_backend project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import sys
from pathlib import Path

from loguru import logger

# Настройки логирования LOGURU
logger.remove()  # Удаляем стандартный обработчик (вывод в консоль по умолчанию)

# Добавляем обработчик для вывода в консоль
logger.add(
    sys.stdout,  # Поток вывода
    format="<green>{time:YYYY-MM-DD HH:mm:ss}</green> | "
    "<level>{level: <8}</level> | "
    "<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - "
    "<level>{message}</level>",
    level="INFO",  # Минимальный уровень логов для консоли
    colorize=True,  # Цветное форматирование
    enqueue=True,  # Асинхронная запись
)

# Добавляем обработчик для записи логов в файл
logger.add(
    "logs/whisper_backend_{time:YYYY-MM-DD}.log",  # Путь к файлу логов
    rotation="1 day",  # Ротация логов ежедневно
    retention="7 days",  # Хранить логи 7 дней
    compression="zip",  # Сжимать устаревшие логи
    level="DEBUG",  # Минимальный уровень логов для файла
    format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}",  # Формат
    encoding="utf-8",  # Кодировка файла
)

# Добавляем обработчик для записи ошибок в отдельный файл
logger.add(
    "logs/whisper_backend_errors.log",
    level="ERROR",  # Логировать только ошибки и критические сообщения
    rotation="500 MB",  # Ротация по размеру файла
    retention="1 month",  # Хранить логи ошибок 1 месяц
    format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {message} | {exception}",  # Включение исключений в лог
    diagnose=True,  # Включение диагностической информации
)

# # Пример фильтрации: можно логировать только сообщения из определенного модуля или пакета
# logger.add(
#     "logs/specific_module.log",
#     level="DEBUG",
#     filter="my_app.specific_module",  # Логировать только из указанного модуля
#     rotation="10 MB",
#     retention="10 days",
#     format="{time:YYYY-MM-DD HH:mm:ss} | {message}",
# )


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = (
    "django-insecure-4k@zw33&zaczk1g09#p&!=kh0hv66ha=zbfpx^kqnz*5*lf$#%"
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "config",
    "files",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "whisper_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "whisper_backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "veteran_db",  # Имя базы данных
        "USER": "postgres",  # Имя пользователя
        "PASSWORD": "root",  # Пароль
        "HOST": "localhost",  # Хост, обычно localhost
        "PORT": "5432",  # Порт PostgreSQL
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
